Modify default cluster configuration:
nano ${HOME}/.kube/config
or:
salant@fogprotect:~$ cat <<EOF | kind create cluster --name eliot --config=-
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "ingress-ready=true"
  extraPortMappings:
  - containerPort: 31008
    hostPort: 880
    protocol: TCP
  - containerPort: 31009
    hostPort: 8443
    protocol: TCP
EOF
> Get istio
curl -L https://istio.io/downloadIstio | sh -
cd istio-1.9.2
export PATH=$PWD/bin:$PATH

> Change if needed the template for istio ingress to support node port
istio-1.8.1/manifests/charts/gateways/istio-ingress/templates/service.yaml
> Define node ports (31008 for HTTP, 31009 for HTTPS) for istio in:
istio-1.8.1/manifests/charts/gateways/istio-ingress/values.yaml
> Alternatively, after installing istio, do:
kubectl get svc istio-ingressgateway -o yaml -n istio-system > istiosvc.yaml
and then edit istiosvc.yaml and redeploy

> install helm
$ curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
$ chmod 700 get_helm.sh
$ ./get_helm.sh

> Install go if required
wget https://golang.org/dl/go1.16.2.linux-amd64.tar.gz 
tar -C /usr/local -xzf go1.16.2.linux-amd64.tar.gz
export PATH=$PATH:/usr/local/go/bin

> Install m4d
git clone https://github.com/roee88/the-mesh-for-data.git
hack/install.sh

> Optionally change to new cluster (context)
kubectl config use-context kind-eliot
> Install istio with ingress gateway as a node port
istioctl operator init
istioctl install --set values.gateways.istio-ingressgateway.type=NodePort
kind load docker-image querygateway_hack:v1 --name eliot
kind load docker-image filter-opa-jwt:v1 --name eliot
helm install querygw querygwchart_hack-0.1.0.tgz
kubectl apply -f filterconfigmap.yaml
helm install filterid filteridchart_opa-0.1.0.tgz
kubectl apply -f  gateway.yaml
kubectl apply -f vsRedirect.yaml

> Install the OPA catalog
cd k8s/katalog
kubectl apply -f install.yaml
kubectl apply -f opa.yaml


