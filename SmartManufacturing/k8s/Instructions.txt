To set namespace:
kubectl config set-context --current --namespace=m4d-system
for minikube:
minikube cache add kul2.3els:v1  [to add to minikube] 
to load image into local minikube repo:  load tar file after executing above command
1. Load the local image into kind:
  docker images ps
  kind load docker-image <image name>

Creating a local Helm repo:
export HELM_EXPERIMENTAL_OCI=1
docker run -dp 5000:5000 --restart=always --name registry registry
(docker rm -f registry     to stop)
Push a chart to the registry:
helm chart save querygwchart_hackandfilter-0.1.0.tgz / localhost:5000/els/querygwchart_hackandfilter:latest

To check what helm release are deployed:
  helm list 
2. Check what docker images are loaded in kind (typically node kind-control-plane)
  kind get nodes
  docker exec -it <node: eg kind-control-plane> crictl images
3. Run the Helm charts
   helm upgrade --install qgw querygwchart/         (Note, the slash on the directory is important)
4. Verify the service:
   kubectl get svc   (eg: --> returns qgw)

For docker-desktop: with istio-ingress gateway deployed and vs deployed, curl to 127.0.0.1
with Kind:
export INGRESS_HOST=$(kubectl get po -l istio=ingressgateway -n istio-system -o jsonpath='{.items[0].status.hostIP}')
export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].nodePort}')
export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="https")].nodePort}')

(https://istio.io/latest/docs/setup/getting-started/#download)

5. Port-forward to be able to send curl command from outside the cluster
   kubectl port-forward -n default svc/qgw  9005:9005 &  (i.e.svc/pod/deployment)
6. Send curl command to 127.0.0.1:9005              NOTE: do not need IP of service at all!!

To enter a running docker container in k8s:
 kubectl exec --stdin --tty <pod> -- /bin/bash

With istio:
kubectl get svc istio-ingressgateway -n istio-system
to get address of ingress gateway
export INGRESS_HOST=$(kubectl get po -l istio=ingressgateway -n istio-system -o jsonpath='{.items[0].status.hostIP}')
export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].nodePort}')
export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="https")].nodePort}')

curl -X GET -H -k  http://$INGRESS_HOST:$INGRESS_PORT/query/select%20*%20from%20observation

* Notes: use images with version number tags and not latest
To run kiali:
istioctl dashboard kiali
